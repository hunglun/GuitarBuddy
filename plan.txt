Assets
1 http://www.istockphoto.com
2 http://99designs.com.sg
3 https://www.fiverr.com/categories/graphics-design

App store
https://www.udacity.com/course/viewer#!/c-ud607-nd/l-4166808608/m-4189249174

If you plan to submit your app to the App Store, then there are a few things you'll need to prepare before doing so. They're listed below, and we'll talk about how to go about preparing them in the next sections:

Assets (Icons, screen shots, description prose, launch image)
Certificate
App ID
Provisioning profile
Archive

Potential partner:
William

---------------------------------------------------
Sprint 1 MVP [50% completed]
1. Metronome functionality 5h [3h] DONE
2. Record 3h [1.5h] DONE
3. Publish 5h
4. Gallery of records 3h

[3]
learn how to use custom uri scheme [1h -> 15min] DONE
authentication soundcloud. [1h -> 6h!]
upload [1h]

client id : fdf75eddcd987c3e6beb9b3a47925633
client secret: dfd72e17039500100a3b5bd0be3cb9b0
end user authroisation : https://soundcloud.com/connect
token : https://api.soundcloud.com/oauth2/token

29th Feb Midnight

---------------------------------------------------

Sprint 2 DONE
1. OAuth with Soundcloud. [15min]

Optional({"access_token":"1-182209-4793009-f9e477d058e6b69","scope":"non-expiring"})

I actually spent time (2 hours) in office to study OAuth specs!

End 1st March (OK)
---------------------------------------------------
Sprint 3 [DONE]
1. publish a record [DONE]
2. shows a gallery of records in a collection view [DONE]
End 3rd March


[2]
create a table view [DONE]
create network helper function in soundcloud. [1h] [DONE]
get user id via /me method [15min -> 30min] [DONE]
GET	/users/{id}/tracks list of tracks of the user [1h] [DONE]
[1]
navigate between 2 views easily [1h] [DONE]
upload a track to soundcloud [5h] [DONE]
 -- python wrapper upload track works. [DONE]
 -- take a look at the deprecated iOS wrapper. [DONE]

http://stackoverflow.com/questions/26162616/upload-image-with-parameters-in-swift

---------------------------------------------------
Sprint 4
1 Persist access token [15min -> 60min] DONE
2 PracticeItemTableViewController [1h] DONE
  - list all practice items
3 Create AddPracticeItemViewController [1h]
4 Record view controller can navigate to the previous or next practice [1h]
5 Record view controller add statistics [1h]
  - recording time, metronome time, measure count, meter, target tempo
  - add progress bar based on a formula
  - show temp, meter and measure count

[1] 
End 5th March 2016
---------------------------------------------------

Features
practice view controller shows the last practised piece
update record track in soundcloud
add statistics : recording time, metronome time, measure count, meter, target tempo
  - the last 3 variables can determine the length of recording upon achieving the target tempo.
save access token in CoreData
Add title to Recording View
tempo persists in record view
RecordView has back and next navigation button to traverse to neighbouring songs quickly
cache the list of track info downloaded from the web.
filter out noise from recording

Bugs
When iPhone goes to sleep mode, the metronome produces no sound.
remove wav file before recording a new one.
